{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export const createGalleryCardTemplate = imgInfo => {\n  return `<li class=\"gallery-card\">\n              <section class=\"card\">\n              <a class=\"gallery-link\" href=\"${imgInfo.largeImageURL}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img class=\"gallery-img\" src=\"${imgInfo.webformatURL}\" alt=\"${imgInfo.tags}\" />\n              </a>\n              <div class=\"gallery-container\">\n                <div class=\"gallery-item\">\n                  <p class=\"gallery-title\">Likes</p>\n                  <p class=\"gallery-count\">${imgInfo.likes}</p>\n                </div>\n                <div class=\"gallery-item\">\n                  <p class=\"gallery-title\">Views</p>\n                  <p class=\"gallery-count\">${imgInfo.views}</p>\n                </div>\n                <div class=\"gallery-item\">\n                  <p class=\"gallery-title\">Comments</p>\n                  <p class=\"gallery-count\">${imgInfo.comments}</p>\n                </div>\n                <div class=\"gallery-item\">\n                  <p class=\"gallery-title\">Downloads</p>\n                  <p class=\"gallery-count\">${imgInfo.downloads}</p>\n                </div>\n              </div>\n            </section>\n          </li>`;\n};\n","import axios from 'axios';\n\nexport const fetchPhotosByQuery = searchedQuery => {\n  const axiosOptions = {\n    params: {\n      q: searchedQuery,\n      key: '48306389-9c3f7e9b102fd2bc2270acf47',\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: 'true',\n      page: 1,\n      per_page: '15',\n    },\n  };\n  return axios.get(`https://pixabay.com/api/`, axiosOptions);\n  // .then(response => {\n  //   if (!response.ok) {\n  //     throw new Error(response.status);\n  //   }\n  //   return response.json();\n  // });\n};\n\n// ============================================\n// export const fetchPhotosByQuery = searchedQuery => {\n//   const searchParams = new URLSearchParams({\n//     q: searchedQuery,\n//     key: '48306389-9c3f7e9b102fd2bc2270acf47',\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: 'true',\n//     page: 1,\n//     per_page: '15',\n//   });\n\n//   return fetch(`https://pixabay.com/api/?${searchParams.toString()}`).then(\n//     response => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     }\n//   );\n// };\n","// Завантажимо бібліотеки\n\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\n\nimport { createGalleryCardTemplate } from './js/render-functions';\nimport { fetchPhotosByQuery } from './js/pixabay-api';\n// Отримуємо посилання на елементи сторінки\nconst searchFormEl = document.querySelector('.js-form-search');\nconst galleryEl = document.querySelector('.js-gallery');\nconst loader = document.querySelector('.loader');\n// Ініціалізація SimpleLightbox\nlet gallerySLB = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 300,\n});\n//ф-ія викликається при сабміті форми\nconst onSearchFormSubmit = event => {\n  // Запобігаємо перезавантаженню сторінки\n  event.preventDefault();\n  //зчитуємо значення з інпута, видаляючи пробіли\n  const searchedQuery = event.currentTarget.elements.user_query.value.trim('');\n  //перевірка, чи інпут не порожній\n  if (searchedQuery === '') {\n    iziToast.error({\n      title: 'Error',\n      messageColor: 'Purple',\n      color: 'red',\n      position: 'topRight',\n      message: 'Please enter your request',\n      messageSize: '20',\n    });\n    return;\n  }\n  //Видалимо клас is-hidden для показу індикатора завантаження\n  loader.classList.remove('is-hidden');\n  fetchPhotosByQuery(searchedQuery) //запит на сервер\n    .then(data => {\n      //перевірка на неіснуюче слово в інпуті\n      //Якщо на серверінемає зображень за таким пошуком, відображається сповіщення про помилку.\n      if (data.total === 0) {\n        iziToast.error({\n          title: 'Error',\n          messageColor: 'Purple',\n          color: 'red',\n          position: 'topRight',\n          messageSize: '20',\n          message: 'Sorry, there are no images. Please try again!',\n        });\n        galleryEl.innerHTML = ''; //почистили галерею\n        searchFormEl.reset(); //почистили імпут\n        return;\n      }\n      //генеруємо розмітку(якщо є зображення, формуємо рядок з розміткою)\n      const galleryTemplate = data.hits\n        .map(el => createGalleryCardTemplate(el))\n        .join('');\n      //відмальовуємо зображення на сторінці\n      galleryEl.innerHTML = galleryTemplate;\n      //ховаємо індикатор завантаження\n      loader.classList.add('is-hidden');\n      //оновлюємо галерею SimpleLightbox\n      gallerySLB.refresh();\n    })\n    //Якщо є помилка, ховається індикатор завантаження, а помилка виводиться в консоль.\n    .catch(err => {\n      loader.style.display = 'none';\n      console.log(err);\n    });\n  //очистимо форму після завершення запиту\n  searchFormEl.reset();\n};\n\n// Додаємо обробник події на форму пошуку\nsearchFormEl.addEventListener('submit', onSearchFormSubmit);\n\n// =====================================\n\n// Завантажимо бібліотеки\n// import axios from 'axios';\n// import { fetchPosts } from './js/pixabay-api';\n// const loadMoreBtn = document.querySelector('.load-more-btn');\n// // console.log(fetchPosts);\n// const renderPosts = async () => {\n//   try {\n//     const { data } = await fetchPosts(1);\n//     const PostCardTempate = data\n//       .map(post => createPostCardTempate(post))\n//       .join('');\n//     postslistEl.innerHTML = postCardTempate;\n//     loadMoreBtn.addEventListener('click', onLoadMoreBtnClick);\n\n//     console.log(loadMoreBtn);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n// renderPosts();\n// const onLoadMoreBtnClick = async () => {\n//   try {\n//     page++;\n//     const { data } = await fetchPosts(page);\n//     if (data.length === 0) {\n//       loadMoreBtn.classList.addEventListener('click', onLoadMoreBtnClick);\n//       return;\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n//   console.log('pop');\n// };\n"],"names":["createGalleryCardTemplate","imgInfo","fetchPhotosByQuery","searchedQuery","axiosOptions","axios","searchFormEl","galleryEl","loader","gallerySLB","SimpleLightbox","onSearchFormSubmit","event","iziToast","data","galleryTemplate","el","err"],"mappings":"owBAAO,MAAMA,EAA4BC,GAChC;AAAA;AAAA,8CAEqCA,EAAQ,aAAa;AAAA,gDACnBA,EAAQ,YAAY,UAAUA,EAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,6CAK7CA,EAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,6CAIbA,EAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,6CAIbA,EAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA,6CAIhBA,EAAQ,SAAS;AAAA;AAAA;AAAA;AAAA,iBCnBjDC,EAAqBC,GAAiB,CACjD,MAAMC,EAAe,CACnB,OAAQ,CACN,EAAGD,EACH,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,KAAM,EACN,SAAU,IACX,CACL,EACE,OAAOE,EAAM,IAAI,2BAA4BD,CAAY,CAO3D,ECbME,EAAe,SAAS,cAAc,iBAAiB,EACvDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAAa,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAED,MAAMC,EAAqBC,GAAS,CAElCA,EAAM,eAAc,EAEpB,MAAMT,EAAgBS,EAAM,cAAc,SAAS,WAAW,MAAM,KAAK,EAAE,EAE3E,GAAIT,IAAkB,GAAI,CACxBU,EAAS,MAAM,CACb,MAAO,QACP,aAAc,SACd,MAAO,MACP,SAAU,WACV,QAAS,4BACT,YAAa,IACnB,CAAK,EACD,MACD,CAEDL,EAAO,UAAU,OAAO,WAAW,EACnCN,EAAmBC,CAAa,EAC7B,KAAKW,GAAQ,CAGZ,GAAIA,EAAK,QAAU,EAAG,CACpBD,EAAS,MAAM,CACb,MAAO,QACP,aAAc,SACd,MAAO,MACP,SAAU,WACV,YAAa,KACb,QAAS,+CACnB,CAAS,EACDN,EAAU,UAAY,GACtBD,EAAa,MAAK,EAClB,MACD,CAED,MAAMS,EAAkBD,EAAK,KAC1B,IAAIE,GAAMhB,EAA0BgB,CAAE,CAAC,EACvC,KAAK,EAAE,EAEVT,EAAU,UAAYQ,EAEtBP,EAAO,UAAU,IAAI,WAAW,EAEhCC,EAAW,QAAO,CACxB,CAAK,EAEA,MAAMQ,GAAO,CACZT,EAAO,MAAM,QAAU,OACvB,QAAQ,IAAIS,CAAG,CACrB,CAAK,EAEHX,EAAa,MAAK,CACpB,EAGAA,EAAa,iBAAiB,SAAUK,CAAkB"}